"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1108],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,k=d["".concat(p,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(k,l(l({ref:t},c),{},{components:n})):a.createElement(k,l({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=d;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var s=2;s<i;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23550:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),l=["components"],o={title:"Client Spec (WIP)"},p=void 0,s={unversionedId:"v3/client-spec/client-spec",id:"v3/client-spec/client-spec",title:"Client Spec (WIP)",description:"This document outlines all of a client's steps involved in initiating, submitting and completing mints and burns.",source:"@site/ren-js/v3/client-spec/client-spec.mdx",sourceDirName:"v3/client-spec",slug:"/v3/client-spec/",permalink:"/ren-client-docs/ren-js/v3/client-spec/",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/ren-js/v3/client-spec/client-spec.mdx",tags:[],version:"current",frontMatter:{title:"Client Spec (WIP)"}},c=[{value:"Contents",id:"contents",children:[],level:3},{value:"Generating a gateway address",id:"generating-a-gateway-address",children:[{value:"Dependency chain",id:"dependency-chain",children:[],level:3},{value:"Information provided by the user / the front-end",id:"information-provided-by-the-user--the-front-end",children:[],level:3},{value:"Select a shard",id:"select-a-shard",children:[],level:3},{value:"Hashes",id:"hashes",children:[],level:3}],level:2}],u={toc:c};function d(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This document outlines all of a client's steps involved in initiating, submitting and completing mints and burns."),(0,i.kt)("p",null,"It serves as a specification for RenJS to follow, as well as for other potential client implementations."),(0,i.kt)("h3",{id:"contents"},"Contents"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"1 ",(0,i.kt)("a",{parentName:"li",href:"#locking"},"Locking")),(0,i.kt)("li",{parentName:"ul"},"1.1 ",(0,i.kt)("a",{parentName:"li",href:"#generating-a-gateway-address"},"Generating a gateway address"))),(0,i.kt)("h1",{id:"locking"},"Locking"),(0,i.kt)("h2",{id:"generating-a-gateway-address"},"Generating a gateway address"),(0,i.kt)("h3",{id:"dependency-chain"},"Dependency chain"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Gateway address depends on",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"gPubKey, which depends on",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the selector"),(0,i.kt)("li",{parentName:"ul"},"the latest ",(0,i.kt)("inlineCode",{parentName:"li"},"ren_queryState")," result"))),(0,i.kt)("li",{parentName:"ul"},"gHash, which depends on",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the recipient"),(0,i.kt)("li",{parentName:"ul"},"nonce"),(0,i.kt)("li",{parentName:"ul"},"pHash, which depends on",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"payload"))),(0,i.kt)("li",{parentName:"ul"},"sHash, which depends on",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"the selector")))))))),(0,i.kt)("h3",{id:"information-provided-by-the-user--the-front-end"},"Information provided by the user / the front-end"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"The chain on which an asset is being locked"),(0,i.kt)("li",{parentName:"ol"},"The asset being locked"),(0,i.kt)("li",{parentName:"ol"},"The host chain, where the ren-asset will be minted"),(0,i.kt)("li",{parentName:"ol"},"A recipient on the target chain - either a user's address or a contract"),(0,i.kt)("li",{parentName:"ol"},"A payload associated with the recipient, such as the parameters for a contract call"),(0,i.kt)("li",{parentName:"ol"},"A nonce, an arbitrary 32-byte integer")),(0,i.kt)("p",null,"The ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"selector"))," is defined to be ",(0,i.kt)("inlineCode",{parentName:"p"},"ASSET/toHostChain")," for the provided asset and host-chain."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Lock-chain"),": Terra"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Asset"),": LUNA"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Host-chain"),": Ethereum"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Selector"),": `LUNA/toEthereum"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Recipient"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"BasicAdapter")," contract deployed at ",(0,i.kt)("inlineCode",{parentName:"li"},"0x32666B64e9fD0F44916E1378Efb2CFa3B3B96e80"),", decoded from hex"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Payload"),":"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Nonce"),": 3"))),(0,i.kt)("h3",{id:"select-a-shard"},"Select a shard"),(0,i.kt)("p",null,"A RenVM shard is selected using the ",(0,i.kt)("inlineCode",{parentName:"p"},"ren_queryState")," JSON-RPC endpoint on RenVM. The shard must support the asset being locked."),(0,i.kt)("p",null,"We assign the shard's public key to the variable ",(0,i.kt)("inlineCode",{parentName:"p"},"gPubKey"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Example")),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"ren_queryState")," result:")),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},'POST https://rpc-testnet.renproject.io/\n{\n    "id": 1,\n    "jsonrpc": "2.0",\n    "method": "ren_queryState",\n    "params": {}\n}\nRESPONSE\n{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "state": {\n      "Bitcoin": {\n        "address": "mytu3FGw8cTzGTBTQZoVcZ2CZaYpRdk2YA",\n        "dust": "546",\n        "gasCap": "2",\n        "gasLimit": "400",\n        "gasPrice": "2",\n        "latestChainHash": "",\n        "latestChainHeight": "2034624",\n        "minimumAmount": "547",\n        "output": {\n          "outpoint": {\n            "hash": "4ZIEedHtDGcEXu-xTNjeaQSTHRHS1rvW6twem9gT2mU",\n            "index": "2"\n          },\n          "pubKeyScript": "dqkUyZiyqIrJZnbhTwdzkANBl5mmgjqIrA",\n          "value": "840258866"\n        },\n        "pubKey": "Aw3WX32ykguyKZEuP0IT3RUOX5csm3PpvnFNhEVhrDVc"\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",{parentName:"blockquote"},"We select the ",(0,i.kt)("inlineCode",{parentName:"p"},"pubKey")," listed under ",(0,i.kt)("inlineCode",{parentName:"p"},'"Bitcoin"'),"."),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"gPubKey"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"Aw3WX32ykguyKZEuP0IT3RUOX5csm3PpvnFNhEVhrDVc")))),(0,i.kt)("h3",{id:"hashes"},"Hashes"),(0,i.kt)("p",null,"There are several hashes involved in generating a gateway address. All of them use Keccak256, but some encode the data being hashed differently."),(0,i.kt)("p",null,"The hashes are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"sHash"))," - the selector hash. ",(0,i.kt)("inlineCode",{parentName:"li"},"keccak256(selector)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"pHash"))," - the payload hash. ",(0,i.kt)("inlineCode",{parentName:"li"},"keccak256(payload)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"gHash"))," - the gateway hash. ",(0,i.kt)("inlineCode",{parentName:"li"},"keccak256(concat(pHash, sHash, recipient, nonce))"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Example"))),(0,i.kt)("ul",{parentName:"blockquote"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"sHash"),": ",(0,i.kt)("inlineCode",{parentName:"li"},'keccak256("LUNA/toEthereum")')," => ",(0,i.kt)("inlineCode",{parentName:"li"},"cf82f7a141f97d439a22da6e28ef6c74c814875a32d79c6630afe73242e47e0d")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"pHash"),": ",(0,i.kt)("inlineCode",{parentName:"li"},"keccak256()")))))}d.isMDXComponent=!0}}]);