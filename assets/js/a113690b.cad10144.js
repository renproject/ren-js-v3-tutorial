"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8838],{4534:function(e,n,t){t.r(n),t.d(n,{Link:function(){return f},contentTitle:function(){return p},default:function(){return b},frontMatter:function(){return d},metadata:function(){return m},toc:function(){return h}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),l=t(26396),i=t(58215),u=t(93454),s=t(78602),c=["components"],d={title:"Darknode Stats",slug:"/darknode-stats"},p=void 0,m={unversionedId:"darknode-stats",id:"darknode-stats",title:"Darknode Stats",description:"The RenVM subgraphs provides a way to query Ren's on-chain activity in a more efficient manner than making direct contract calls. It provides a GraphQL interface that can be used to lookup information about darknodes, assets and mints/burns.",source:"@site/stats/darknode-stats.mdx",sourceDirName:".",slug:"/darknode-stats",permalink:"/ren-client-docs/stats/darknode-stats",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/stats/darknode-stats.mdx",tags:[],version:"current",frontMatter:{title:"Darknode Stats",slug:"/darknode-stats"},sidebar:"subgraph",previous:{title:"RenVM Stats",permalink:"/ren-client-docs/stats/renvm-stats"},next:{title:"Query 24h fees",permalink:"/ren-client-docs/stats/24h-fees"}},h=[{value:"Networks",id:"networks",children:[],level:2},{value:"Querying",id:"querying",children:[{value:"Try it now",id:"try-it-now",children:[],level:3}],level:2}],f=function(e){var n=e.children;return(0,o.kt)("a",{target:"_blank",rel:"noopener noreferrer",href:n},n)},k={toc:h,Link:f};function b(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},k,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(u.G,{type:u.e.HowTo,mdxType:"DocTag"})," ",(0,o.kt)(u.G,{type:u.e.Reference,mdxType:"DocTag"}),(0,o.kt)("p",null,"The RenVM subgraphs provides a way to query Ren's on-chain activity in a more efficient manner than making direct contract calls. It provides a GraphQL interface that can be used to lookup information about darknodes, assets and mints/burns."),(0,o.kt)("h2",{id:"networks"},"Networks"),(0,o.kt)("p",null,"A RenVM subgraph is available on the following networks:"),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"mainnet",mdxType:"TabItem"},(0,o.kt)("b",null,"Ethereum"),(0,o.kt)("br",null),"API:"," ",(0,o.kt)(f,{mdxType:"Link"},"https://api.thegraph.com/subgraphs/name/renproject/renvm"),(0,o.kt)("br",null),(0,o.kt)("b",null,"Binance Smart Chain"),(0,o.kt)("br",null),"API:"," ",(0,o.kt)(f,{mdxType:"Link"},"https://bsc-graph.renproject.io/subgraphs/name/renproject/renvm"),(0,o.kt)("br",null),(0,o.kt)("b",null,"Polygon"),(0,o.kt)("br",null),"API:"," ",(0,o.kt)(f,{mdxType:"Link"},"https://api.thegraph.com/subgraphs/name/renproject/renvm-polygon"),(0,o.kt)("br",null),(0,o.kt)("b",null,"Fantom"),(0,o.kt)("br",null),"API:"," ",(0,o.kt)(f,{mdxType:"Link"},"https://api.thegraph.com/subgraphs/name/renproject/renvm-fantom")),(0,o.kt)(i.Z,{value:"testnet",mdxType:"TabItem"},(0,o.kt)("b",null,"Ethereum (Kovan)"),(0,o.kt)("br",null),"API:"," ",(0,o.kt)(f,{mdxType:"Link"},"https://api.thegraph.com/subgraphs/name/renproject/renvm-testnet"))),(0,o.kt)("h2",{id:"querying"},"Querying"),(0,o.kt)("p",null,"In order to query the RenVM subgraphs, you will need a GraphQL library. Some options are:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"The playground below"),(0,o.kt)("li",{parentName:"ol"},"An SDK such as ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@apollo/client"},"Apollo")," - see others at ",(0,o.kt)("a",{parentName:"li",href:"https://graphql.org/code/"},"https://graphql.org/code/"),"."),(0,o.kt)("li",{parentName:"ol"},"A desktop client such as ",(0,o.kt)("a",{parentName:"li",href:"https://insomnia.rest/products/insomnia"},"Insomnia")," or Postman")),(0,o.kt)("p",null,"The subgraphs expose a single POST endpoint that allows you to specify what data to query. A query looks like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-graphql"},'{\n    # Get the darknode with the highest BTC balance.\n    darknodes(first: 1, orderBy: balanceBTC, orderDirection: desc) {\n        id\n        operator\n        registeredAt\n        balances(where: { symbol: "renBTC" }) {\n            symbol\n            amountInUsd\n        }\n    }\n}\n')),(0,o.kt)("p",null,"Posting this to the Ethereum Mainnet API url returns:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "data": {\n        "darknodes": [\n            {\n                "balances": [\n                    {\n                        "amountInUsd": "7264.59",\n                        "symbol": "renBTC"\n                    }\n                ],\n                "id": "0x9fec6514e6a83fa21f5da810ff45dc04dda40670",\n                "operator": "0xd8a0bc22290c42f35dfa010f4233b81a3ae3dd2c",\n                "registeredAt": "1590525958"\n            }\n        ]\n    }\n}\n')),(0,o.kt)("h3",{id:"try-it-now"},"Try it now"),(0,o.kt)("p",null,"Submit queries to the Mainnet Ethereum subgraph. The query will be reset when you leave the page."),(0,o.kt)("p",null,"Click the Docs button in the top-right to explore the schema."),(0,o.kt)(s.k,{minHeight:600,url:"https://api.thegraph.com/subgraphs/name/renproject/renvm",defaultQuery:'{\n  # Get the number of registered darknodes.\n  renVM(id: 1) {\n    numberOfDarknodes\n  }\n  # Get the darknode with the highest BTC balance.\n  darknodes(first: 1, orderBy: balanceBTC, orderDirection: desc) {\n    id\n    operator\n    registeredAt\n    balances(where: {symbol: "renBTC"}) {\n      symbol\n      amountInUsd\n    }\n  }\n}',mdxType:"GraphQL"}))}b.isMDXComponent=!0},93454:function(e,n,t){t.d(n,{G:function(){return i},e:function(){return a}});var r,a,o=t(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(a||(a={}));var l=((r={})[a.Tutorial]="#b48ead",r[a.HowTo]="#69a8b9",r[a.Reference]="#bf616a",r[a.Explanation]="#d2b06c",r),i=function(e){var n=e.type,t=e.marginBottom;return o.createElement(o.Fragment,null,o.createElement("span",{style:{border:"2px solid "+l[n]||0,borderRadius:"5px",color:l[n]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(n)))}},78602:function(e,n,t){t.d(n,{k:function(){return l}});var r=t(67294),a=t(91262),o=function(e){var n=e.url,a=e.defaultQuery,o=e.docExplorerOpen,l=e.minHeight;if("undefined"==typeof window)return null;var i=t(53414).createGraphiQLFetcher,u=t(57932).ZP,s=i({url:n});return r.createElement("div",{style:{height:l||500}},r.createElement(r.Suspense,{fallback:r.createElement("div",null,"Loading...")},r.createElement(u,{docExplorerOpen:o,query:a,fetcher:s})))},l=function(e){return"undefined"==typeof window?null:r.createElement(a.Z,null,(function(){return r.createElement(r.Fragment,null,r.createElement(o,e),r.createElement("br",null))}))}},58215:function(e,n,t){var r=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},26396:function(e,n,t){t.d(n,{Z:function(){return p}});var r=t(87462),a=t(67294),o=t(72389),l=t(79443);var i=function(){var e=(0,a.useContext)(l.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(53810),s=t(86010),c="tabItem_vU9c";function d(e){var n,t,o,l=e.lazy,d=e.block,p=e.defaultValue,m=e.values,h=e.groupId,f=e.className,k=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:k.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,u.lx)(b,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===p?p:null!=(n=null!=p?p:null==(t=k.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(o=k[0])?void 0:o.props.value;if(null!==g&&!b.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=i(),w=y.tabGroupChoices,T=y.setTabGroupChoices,x=(0,a.useState)(g),E=x[0],N=x[1],I=[],C=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=h){var D=w[h];null!=D&&D!==E&&b.some((function(e){return e.value===D}))&&N(D)}var A=function(e){var n=e.currentTarget,t=I.indexOf(n),r=b[t].value;r!==E&&(C(n),N(r),null!=h&&T(h,r))},L=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=I.indexOf(e.currentTarget)+1;t=I[r]||I[0];break;case"ArrowLeft":var a=I.indexOf(e.currentTarget)-1;t=I[a]||I[I.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":d},f)},b.map((function(e){var n=e.value,t=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:E===n?0:-1,"aria-selected":E===n,key:n,ref:function(e){return I.push(e)},onKeyDown:L,onFocus:A,onClick:A},o,{className:(0,s.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":E===n})}),null!=t?t:n)}))),l?(0,a.cloneElement)(k.filter((function(e){return e.props.value===E}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},k.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==E})}))))}function p(e){var n=(0,o.Z)();return a.createElement(d,(0,r.Z)({key:String(n)},e))}}}]);