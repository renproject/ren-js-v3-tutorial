"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1884],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return k}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=s(t),k=r,u=m["".concat(d,".").concat(k)]||m[k]||p[k]||o;return t?a.createElement(u,l(l({ref:n},c),{},{components:t})):a.createElement(u,l({ref:n},c))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,l=new Array(o);l[0]=m;var i={};for(var d in n)hasOwnProperty.call(n,d)&&(i[d]=n[d]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=t[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},67629:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return d},metadata:function(){return c},toc:function(){return p}});var a=t(87462),r=t(63366),o=(t(67294),t(3905)),l=t(93454),i=["components"],d={title:"DarknodePaymentStore"},s=void 0,c={unversionedId:"darknode-sol/DarknodePayment/DarknodePaymentStore",id:"darknode-sol/DarknodePayment/DarknodePaymentStore",title:"DarknodePaymentStore",description:"Contract: DarknodePaymentStore",source:"@site/contracts/darknode-sol/DarknodePayment/DarknodePaymentStore.mdx",sourceDirName:"darknode-sol/DarknodePayment",slug:"/darknode-sol/DarknodePayment/DarknodePaymentStore",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodePayment/DarknodePaymentStore",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/contracts/darknode-sol/DarknodePayment/DarknodePaymentStore.mdx",tags:[],version:"current",frontMatter:{title:"DarknodePaymentStore"},sidebar:"contracts",previous:{title:"DarknodeSlasher",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodeSlasher/"},next:{title:"DarknodePayment",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodePayment/"}},p=[{value:"Contract: <code>DarknodePaymentStore</code>",id:"contract-darknodepaymentstore",children:[],level:2},{value:"Variables",id:"variables",children:[{value:"<strong><code>VERSION</code></strong>: <em><code>string</code></em>",id:"version-string",children:[],level:3},{value:"<strong><code>ETHEREUM</code></strong>: <em><code>address</code></em>",id:"ethereum-address",children:[],level:3},{value:"<strong><code>darknodeBalances</code></strong>: <em><code>mapping(address =&gt; mapping(address =&gt; uint256))</code></em>",id:"darknodebalances-mappingaddress--mappingaddress--uint256",children:[],level:3},{value:"<strong><code>lockedBalances</code></strong>: <em><code>mapping(address =&gt; uint256)</code></em>",id:"lockedbalances-mappingaddress--uint256",children:[],level:3}],level:2},{value:"Functions",id:"functions",children:[{value:"<strong><code>constructor</code></strong> <em><code>(string _VERSION)</code></em> (public)",id:"constructor-string-_version-public",children:[],level:3},{value:"<strong><code>fallback</code></strong> <em><code>()</code></em> (external)",id:"fallback--external",children:[],level:3},{value:"<strong><code>totalBalance</code></strong> <em><code>(address _token) \u2192 uint256</code></em> (public)",id:"totalbalance-address-_token--uint256-public",children:[],level:3},{value:"<strong><code>availableBalance</code></strong> <em><code>(address _token) \u2192 uint256</code></em> (public)",id:"availablebalance-address-_token--uint256-public",children:[],level:3},{value:"<strong><code>incrementDarknodeBalance</code></strong> <em><code>(address _darknode, address _token, uint256 _amount)</code></em> (external)",id:"incrementdarknodebalance-address-_darknode-address-_token-uint256-_amount-external",children:[],level:3},{value:"<strong><code>transfer</code></strong> <em><code>(address _darknode, address _token, uint256 _amount, address payable _recipient)</code></em> (external)",id:"transfer-address-_darknode-address-_token-uint256-_amount-address-payable-_recipient-external",children:[],level:3}],level:2}],m={toc:p};function k(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(l.G,{type:l.e.Reference,mdxType:"DocTag"}),(0,o.kt)("h2",{id:"contract-darknodepaymentstore"},"Contract: ",(0,o.kt)("inlineCode",{parentName:"h2"},"DarknodePaymentStore")),(0,o.kt)("p",null,"DarknodePaymentStore is responsible for tracking balances which have\nbeen allocated to the darknodes. It is also responsible for holding\nthe tokens to be paid out to darknodes."),(0,o.kt)("p",null,"Inherits from:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Claimable")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Ownable")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Context")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Initializable"))),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("h3",{id:"version-string"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"VERSION")),": ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"string"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"ethereum-address"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"ETHEREUM")),": ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"address"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"darknodebalances-mappingaddress--mappingaddress--uint256"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"darknodeBalances")),": ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"mapping(address => mapping(address => uint256))"))),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"lockedbalances-mappingaddress--uint256"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"lockedBalances")),": ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"mapping(address => uint256)"))),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"functions"},"Functions"),(0,o.kt)("h3",{id:"constructor-string-_version-public"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"constructor"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"(string _VERSION)"))," (public)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Params")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_VERSION"),": A string defining the contract version.")),(0,o.kt)("p",null,"The contract constructor."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"fallback--external"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"fallback"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"()"))," (external)"),(0,o.kt)("p",null,"Allow direct ETH payments to be made to the DarknodePaymentStore."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"totalbalance-address-_token--uint256-public"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"totalBalance"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"(address _token) \u2192 uint256"))," (public)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Params")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_token"),": The token to check balance of.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"The"),": total balance of the contract.")),(0,o.kt)("p",null,"Get the total balance of the contract for a particular token."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"availablebalance-address-_token--uint256-public"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"availableBalance"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"(address _token) \u2192 uint256"))," (public)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Params")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"_token"),": The token to check balance of.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"The"),": available balance of the contract.")),(0,o.kt)("p",null,"Get the available balance of the contract for a particular token\nThis is the free amount which has not yet been allocated to\ndarknodes."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"incrementdarknodebalance-address-_darknode-address-_token-uint256-_amount-external"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"incrementDarknodeBalance"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"(address _darknode, address _token, uint256 _amount)"))," (external)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Params")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_darknode"),": The address of the darknode to increase balance of.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_token"),": The token which the balance should be incremented.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_amount"),": The amount that the balance should be incremented by."))),(0,o.kt)("p",null,"Increments the amount of funds allocated to a particular\ndarknode."),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"transfer-address-_darknode-address-_token-uint256-_amount-address-payable-_recipient-external"},(0,o.kt)("strong",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"strong"},"transfer"))," ",(0,o.kt)("em",{parentName:"h3"},(0,o.kt)("inlineCode",{parentName:"em"},"(address _darknode, address _token, uint256 _amount, address payable _recipient)"))," (external)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Params")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_darknode"),": The address of the darknode.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_token"),": Which token to transfer.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_amount"),": The amount to transfer.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"_recipient"),": The address to withdraw it to."))),(0,o.kt)("p",null,"Transfers an amount out of balance to a specified address."),(0,o.kt)("hr",null))}k.isMDXComponent=!0},93454:function(e,n,t){t.d(n,{G:function(){return i},e:function(){return r}});var a,r,o=t(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(r||(r={}));var l=((a={})[r.Tutorial]="#b48ead",a[r.HowTo]="#69a8b9",a[r.Reference]="#bf616a",a[r.Explanation]="#d2b06c",a),i=function(e){var n=e.type,t=e.marginBottom;return o.createElement(o.Fragment,null,o.createElement("span",{style:{border:"2px solid "+l[n]||0,borderRadius:"5px",color:l[n]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(n)))}}}]);