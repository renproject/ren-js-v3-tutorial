"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6375],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),h=a,d=m["".concat(c,".").concat(h)]||m[h]||u[h]||o;return n?r.createElement(d,i(i({ref:t},p),{},{components:n})):r.createElement(d,i({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},18397:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return m}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),i=n(69324),s=n(93454),c=["components"],l={title:"Solana"},p=void 0,u={unversionedId:"v3/reference/chains/solana",id:"v3/reference/chains/solana",title:"Solana",description:"Solana (TypeDoc)",source:"@site/ren-js/v3/reference/chains/solana.mdx",sourceDirName:"v3/reference/chains",slug:"/v3/reference/chains/solana",permalink:"/ren-client-docs/ren-js/v3/reference/chains/solana",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/ren-js/v3/reference/chains/solana.mdx",tags:[],version:"current",frontMatter:{title:"Solana"},sidebar:"docs",previous:{title:"Ethereum",permalink:"/ren-client-docs/ren-js/v3/reference/chains/ethereum"},next:{title:"Quick Start",permalink:"/ren-client-docs/ren-js/quick-start"}},m=[{value:'Solana <TypeDoc name="Solana">(TypeDoc)</TypeDoc>',id:"solana-typedoc",children:[{value:"Payloads",id:"payloads",children:[],level:4}],level:3}],h={toc:m};function d(e){var t=e.components,n=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.G,{type:s.e.Reference,mdxType:"DocTag"}),(0,o.kt)("h3",{id:"solana-typedoc"},"Solana ",(0,o.kt)(i.L,{name:"Solana",mdxType:"TypeDoc"},"(TypeDoc)")),(0,o.kt)("p",null,"The Solana class expects:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},'a network - either a Ren network ("mainnet", "testnet" or "devnet"), or a ',(0,o.kt)("inlineCode",{parentName:"li"},"SolNetworkConfig"),"."),(0,o.kt)("li",{parentName:"ol"},"a provider - a ",(0,o.kt)("inlineCode",{parentName:"li"},"Connection")," instance from the ",(0,o.kt)("a",{parentName:"li",href:"https://npmjs.org/package/@solana/web3.js"},"@solana/web3.js"),"."),(0,o.kt)("li",{parentName:"ol"},"an optinal signer - a ",(0,o.kt)("inlineCode",{parentName:"li"},"Wallet")," instance from the ",(0,o.kt)("a",{parentName:"li",href:"https://npmjs.org/package/@project-serum/sol-wallet-adapter"},"@project-serum/sol-wallet-adapter")," library. If no signer is provided, it should be provided later with ",(0,o.kt)("inlineCode",{parentName:"li"},".withSigner()"))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Testnet")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"RenVM Testnet points to Solana Devnet, not Solana Testnet."))),(0,o.kt)("p",null,"An example of connecting using a private key:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'new Solana({\n    network: "testnet",\n    provider: new Connection("https://api.devnet.solana.com"),\n    signer: new Wallet(window.solana),\n}\n')),(0,o.kt)("p",null,"You can import ",(0,o.kt)("inlineCode",{parentName:"p"},"renMainnet")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"renTestnet")," from ",(0,o.kt)("inlineCode",{parentName:"p"},"@renproject/chains-solana/build/main/network")," to access ",(0,o.kt)("inlineCode",{parentName:"p"},"renMainnet.endpoint")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"renMainnet.endpoint")," instead of hard-coding the endpoint passed to ",(0,o.kt)("inlineCode",{parentName:"p"},"Connection"),"."),(0,o.kt)("h4",{id:"payloads"},"Payloads"),(0,o.kt)("p",null,"The available input payloads are:"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Account"),(0,o.kt)(i.L,{name:"Solana.Account",mdxType:"TypeDoc"},"solana.Account")," allows you to specify the user's connected address as the recipient for a mint or release.",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'renJS.gateway({\n    asset: "BTC",\n    from: ethereum.Account({ amount: "0.1", convertUnit: true }),\n    ...\n})\n')),(0,o.kt)("p",null,"Required parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"amount")," - the asset amount to lock or burn")),(0,o.kt)("p",null,"Optional parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"convertUnit")," - convert the ",(0,o.kt)("inlineCode",{parentName:"li"},"amount")," to the chain's smallest unit."))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Transaction"),(0,o.kt)(i.L,{name:"Solana.Transaction",mdxType:"TypeDoc"},"solana.Transaction")," allows you to specify an existing Solana transaction as the input.",(0,o.kt)("p",null,"The transaction should be of type ",(0,o.kt)("code",null,"Partial<",(0,o.kt)(i.L,{name:"ChainTransaction",mdxType:"TypeDoc"}),">"),", with at least one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"txid")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"txidFormatted")," is defined."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'renJS.gateway({\n    asset: "BTC",\n    from: ethereum.Transaction({\n      // The transaction\'s hash in the usual Solana hex encoding.\n      txidFormatted: "3mabcf8...",\n    }),\n    ...\n})\n'))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"BurnNonce"),(0,o.kt)(i.L,{name:"Solana.BurnNonce",mdxType:"TypeDoc"},"solana.BurnNonce")," allows you to provide a burn nonce - this can be used as an alternative to solana.Transaction.",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'renJS.gateway({\n    asset: "BTC",\n    from: ethereum.BurnNonce(100),\n    ...\n})\n'))),(0,o.kt)("p",null,"The available output payloads are:"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Account"),(0,o.kt)(i.L,{name:"Solana.Account",mdxType:"TypeDoc"},"solana.Account")," allows you to specify the user's account as the recipient of the minted or released funds.",(0,o.kt)("br",null),(0,o.kt)("br",null),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},'renJS.gateway({\n    asset: "BTC",\n    ...\n    to: solana.Account(),\n})\n'))))}d.isMDXComponent=!0},93454:function(e,t,n){n.d(t,{G:function(){return s},e:function(){return a}});var r,a,o=n(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(a||(a={}));var i=((r={})[a.Tutorial]="#b48ead",r[a.HowTo]="#69a8b9",r[a.Reference]="#bf616a",r[a.Explanation]="#d2b06c",r),s=function(e){var t=e.type,n=e.marginBottom;return o.createElement(o.Fragment,null,o.createElement("span",{style:{border:"2px solid "+i[t]||0,borderRadius:"5px",color:i[t]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==n?n:30,display:"inline-block"}},String(t)))}},69324:function(e,t,n){n.d(t,{L:function(){return o}});var r=n(67294),a={Asset:"enums/_renproject_chains.Asset.html",Chain:"enums/_renproject_chains.Chain.html",RPCMethod:"enums/_renproject_provider.RPCMethod.html",ChainTransactionStatus:"enums/_renproject_utils.ChainTransactionStatus.html",InputType:"enums/_renproject_utils.InputType.html",LogLevel:"enums/_renproject_utils.LogLevel.html",OutputType:"enums/_renproject_utils.OutputType.html",PackPrimitive:"enums/_renproject_utils.PackPrimitive.html",RenJSError:"enums/_renproject_utils.RenJSError.html",RenNetwork:"enums/_renproject_utils.RenNetwork.html",TxStatus:"enums/_renproject_utils.TxStatus.html",EVMParam:"enums/_renproject_chains_ethereum.EVMParam.html",Bitcoin:"classes/_renproject_chains_bitcoin.Bitcoin.html",BitcoinBaseChain:"classes/_renproject_chains_bitcoin.BitcoinBaseChain.html",BitcoinCash:"classes/_renproject_chains_bitcoin.BitcoinCash.html",DigiByte:"classes/_renproject_chains_bitcoin.DigiByte.html",Dogecoin:"classes/_renproject_chains_bitcoin.Dogecoin.html",Zcash:"classes/_renproject_chains_bitcoin.Zcash.html",Arbitrum:"classes/_renproject_chains_ethereum.Arbitrum.html",Avalanche:"classes/_renproject_chains_ethereum.Avalanche.html",BinanceSmartChain:"classes/_renproject_chains_ethereum.BinanceSmartChain.html",Ethereum:"classes/_renproject_chains_ethereum.Ethereum.html",Fantom:"classes/_renproject_chains_ethereum.Fantom.html",Goerli:"classes/_renproject_chains_ethereum.Goerli.html",Polygon:"classes/_renproject_chains_ethereum.Polygon.html",Filecoin:"classes/_renproject_chains_filecoin.Filecoin.html",Solana:"classes/_renproject_chains_solana.Solana.html",Terra:"classes/_renproject_chains_terra.Terra.html",MockChain:"classes/_renproject_mock_provider.MockChain.html",MockProvider:"classes/_renproject_mock_provider.MockProvider.html",RenVMProvider:"classes/_renproject_provider.RenVMProvider.html",Gateway:"classes/_renproject_ren.Gateway.html",GatewayTransaction:"classes/_renproject_ren.GatewayTransaction.html",RenJS:"classes/_renproject_ren.RenJS.html",RenVMTxSubmitter:"classes/_renproject_ren.RenVMTxSubmitter.html",DefaultTxWaiter:"classes/_renproject_utils.DefaultTxWaiter.html",ErrorWithCode:"classes/_renproject_utils.ErrorWithCode.html",EventEmitterTyped:"classes/_renproject_utils.EventEmitterTyped.html",TxWaiterProxy:"classes/_renproject_utils.TxWaiterProxy.html",BitcoinNetworkConfig:"interfaces/_renproject_chains_bitcoin.BitcoinNetworkConfig.html",BitcoinOutputPayload:"interfaces/_renproject_chains_bitcoin.BitcoinOutputPayload.html",EthereumClassConfig:"interfaces/_renproject_chains_ethereum.EthereumClassConfig.html",EvmNetworkConfig:"interfaces/_renproject_chains_ethereum.EvmNetworkConfig.html",FilecoinNetworkConfig:"interfaces/_renproject_chains_filecoin.FilecoinNetworkConfig.html",FilecoinOutputPayload:"interfaces/_renproject_chains_filecoin.FilecoinOutputPayload.html",SolanaPayloadInterface:"interfaces/_renproject_chains_solana.SolanaPayloadInterface.html",TerraOutputPayload:"interfaces/_renproject_chains_terra.TerraOutputPayload.html",BlockState:"interfaces/_renproject_provider.BlockState.html",MarshalledRenVMBlock:"interfaces/_renproject_provider.MarshalledRenVMBlock.html",ParamsQueryBlock:"interfaces/_renproject_provider.ParamsQueryBlock.html",ParamsQueryBlockState:"interfaces/_renproject_provider.ParamsQueryBlockState.html",ParamsQueryBlocks:"interfaces/_renproject_provider.ParamsQueryBlocks.html",ParamsQueryConfig:"interfaces/_renproject_provider.ParamsQueryConfig.html",ParamsQueryTx:"interfaces/_renproject_provider.ParamsQueryTx.html",ParamsQueryTxs:"interfaces/_renproject_provider.ParamsQueryTxs.html",ParamsSubmitTx:"interfaces/_renproject_provider.ParamsSubmitTx.html",RenVMBlock:"interfaces/_renproject_provider.RenVMBlock.html",RenVMProviderInterface:"interfaces/_renproject_provider.RenVMProviderInterface.html",RenVMTransaction:"interfaces/_renproject_provider.RenVMTransaction.html",RenVMTransactionWithStatus:"interfaces/_renproject_provider.RenVMTransactionWithStatus.html",ResponseQueryBlock:"interfaces/_renproject_provider.ResponseQueryBlock.html",ResponseQueryBlockState:"interfaces/_renproject_provider.ResponseQueryBlockState.html",ResponseQueryBlocks:"interfaces/_renproject_provider.ResponseQueryBlocks.html",ResponseQueryConfig:"interfaces/_renproject_provider.ResponseQueryConfig.html",ResponseQueryTx:"interfaces/_renproject_provider.ResponseQueryTx.html",ResponseQueryTxs:"interfaces/_renproject_provider.ResponseQueryTxs.html",ResponseSubmitGateway:"interfaces/_renproject_provider.ResponseSubmitGateway.html",ResponseSubmitTx:"interfaces/_renproject_provider.ResponseSubmitTx.html",SubmitGatewayInput:"interfaces/_renproject_provider.SubmitGatewayInput.html",TransactionInput:"interfaces/_renproject_provider.TransactionInput.html",TransactionOutput:"interfaces/_renproject_provider.TransactionOutput.html",GatewayFees:"interfaces/_renproject_ren.GatewayFees.html",ChainCommon:"interfaces/_renproject_utils.ChainCommon.html",ChainTransaction:"interfaces/_renproject_utils.ChainTransaction.html",ChainTransactionProgress:"interfaces/_renproject_utils.ChainTransactionProgress.html",ContractChain:"interfaces/_renproject_utils.ContractChain.html",DepositChain:"interfaces/_renproject_utils.DepositChain.html",InputChainTransaction:"interfaces/_renproject_utils.InputChainTransaction.html",Logger:"interfaces/_renproject_utils.Logger.html",PackListType:"interfaces/_renproject_utils.PackListType.html",PackStructType:"interfaces/_renproject_utils.PackStructType.html",RenVMShard:"interfaces/_renproject_utils.RenVMShard.html",TxSubmitter:"interfaces/_renproject_utils.TxSubmitter.html",TxWaiter:"interfaces/_renproject_utils.TxWaiter.html",TypedPackValue:"interfaces/_renproject_utils.TypedPackValue.html"},o=function(e){var t=e.name,n=e.children,o=t.split("."),i=o[0],s=o[1];return r.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://renproject.github.io/ren-js-v3-docs/"+a[i]+(s?"#"+s:"")},n||t,a[i]?null:r.createElement("span",{style:{color:"#bf616a"}}," (Link not found)"))}}}]);