"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4031],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=s(t),f=o,h=d["".concat(p,".").concat(f)]||d[f]||l[f]||i;return t?r.createElement(h,a(a({ref:n},u),{},{components:t})):r.createElement(h,a({ref:n},u))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var s=2;s<i;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},23500:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return c},metadata:function(){return s},toc:function(){return u}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=["components"],c={},p=void 0,s={type:"info",id:"introduction",unversionedId:"introduction",title:"Introduction",description:"If you are interacting with RenVM in a language other than JavaScript/TypeScript, you can send requests directly to RenVM using its JSON-RPC endpoint.\nExpand the **JSONRPC dropdown in the sidebar** to see the endpoints available from the JSON-RPC endpoint.\n\nThe available endpoints for sending JSON-RPC requests are:\n\n* Mainnet: [rpc.renproject.io](https://rpc.renproject.io)\n* Testnet: [rpc-testnet.renproject.io](https://rpc-testnet.renproject.io)\n\n\n### Pack Encoding\n\nSome requests and responses use the [pack](https://github.com/renproject/pack) JSON encoding.",slug:"/introduction",frontMatter:{},info:{title:"RenVM JSON-RPC Specification",version:"0.3.0",description:"If you are interacting with RenVM in a language other than JavaScript/TypeScript, you can send requests directly to RenVM using its JSON-RPC endpoint.\nExpand the **JSONRPC dropdown in the sidebar** to see the endpoints available from the JSON-RPC endpoint.\n\nThe available endpoints for sending JSON-RPC requests are:\n\n* Mainnet: [rpc.renproject.io](https://rpc.renproject.io)\n* Testnet: [rpc-testnet.renproject.io](https://rpc-testnet.renproject.io)\n\n\n### Pack Encoding\n\nSome requests and responses use the [pack](https://github.com/renproject/pack) JSON encoding."},source:"@site/tools/json-rpc.json",sourceDirName:".",permalink:"/ren-client-docs/api/introduction",next:{title:"ren_queryTx",permalink:"/ren-client-docs/api/ren-query-tx"}},u=[{value:"Pack Encoding",id:"pack-encoding",children:[],level:3}],l={toc:u};function d(e){var n=e.components,t=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("span",{className:"theme-doc-version-badge badge badge--secondary"},"Version: 0.3.0"),(0,i.kt)("h1",{id:"renvm-json-rpc-specification"},"RenVM JSON-RPC Specification"),(0,i.kt)("p",null,"If you are interacting with RenVM in a language other than JavaScript/TypeScript, you can send requests directly to RenVM using its JSON-RPC endpoint.\nExpand the ",(0,i.kt)("strong",{parentName:"p"},"JSONRPC dropdown in the sidebar")," to see the endpoints available from the JSON-RPC endpoint."),(0,i.kt)("p",null,"The available endpoints for sending JSON-RPC requests are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Mainnet: ",(0,i.kt)("a",{parentName:"li",href:"https://rpc.renproject.io"},"rpc.renproject.io")),(0,i.kt)("li",{parentName:"ul"},"Testnet: ",(0,i.kt)("a",{parentName:"li",href:"https://rpc-testnet.renproject.io"},"rpc-testnet.renproject.io"))),(0,i.kt)("h3",{id:"pack-encoding"},"Pack Encoding"),(0,i.kt)("p",null,"Some requests and responses use the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/renproject/pack"},"pack")," JSON encoding."))}d.isMDXComponent=!0}}]);