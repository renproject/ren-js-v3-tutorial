"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5957],{3905:function(e,n,t){t.d(n,{Zo:function(){return k},kt:function(){return u}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function d(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?d(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):d(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},d=Object.keys(e);for(r=0;r<d.length;r++)t=d[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(r=0;r<d.length;r++)t=d[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},k=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,d=e.originalType,l=e.parentName,k=i(e,["components","mdxType","originalType","parentName"]),p=s(t),u=a,m=p["".concat(l,".").concat(u)]||p[u]||c[u]||d;return t?r.createElement(m,o(o({ref:n},k),{},{components:t})):r.createElement(m,o({ref:n},k))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var d=t.length,o=new Array(d);o[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var s=2;s<d;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},55071:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return k},toc:function(){return c}});var r=t(87462),a=t(63366),d=(t(67294),t(3905)),o=t(93454),i=["components"],l={title:"DarknodeRegistryStore"},s=void 0,k={unversionedId:"darknode-sol/DarknodeRegistry/DarknodeRegistryStore",id:"darknode-sol/DarknodeRegistry/DarknodeRegistryStore",title:"DarknodeRegistryStore",description:"Contract: DarknodeRegistryStore",source:"@site/contracts/darknode-sol/DarknodeRegistry/DarknodeRegistryStore.mdx",sourceDirName:"darknode-sol/DarknodeRegistry",slug:"/darknode-sol/DarknodeRegistry/DarknodeRegistryStore",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodeRegistry/DarknodeRegistryStore",editUrl:"https://github.com/renproject/ren-client-docs/edit/master/contracts/darknode-sol/DarknodeRegistry/DarknodeRegistryStore.mdx",tags:[],version:"current",frontMatter:{title:"DarknodeRegistryStore"},sidebar:"contracts",previous:{title:"ProtocolStateV1",permalink:"/ren-client-docs/contracts/darknode-sol/Protocol/ProtocolStateV1"},next:{title:"DarknodeRegistryLogicV1",permalink:"/ren-client-docs/contracts/darknode-sol/DarknodeRegistry/DarknodeRegistryLogicV1"}},c=[{value:"Contract: <code>DarknodeRegistryStore</code>",id:"contract-darknoderegistrystore",children:[],level:2},{value:"Variables",id:"variables",children:[{value:"<strong><code>VERSION</code></strong>: <em><code>string</code></em>",id:"version-string",children:[],level:3},{value:"<strong><code>ren</code></strong>: <em><code>contract RenToken</code></em>",id:"ren-contract-rentoken",children:[],level:3}],level:2},{value:"Functions",id:"functions",children:[{value:"<strong><code>constructor</code></strong> <em><code>(string _VERSION, contract RenToken _ren)</code></em> (public)",id:"constructor-string-_version-contract-rentoken-_ren-public",children:[],level:3},{value:"<strong><code>appendDarknode</code></strong> <em><code>(address _darknodeID, address payable _darknodeOperator, uint256 _bond, bytes _publicKey, uint256 _registeredAt, uint256 _deregisteredAt)</code></em> (external)",id:"appenddarknode-address-_darknodeid-address-payable-_darknodeoperator-uint256-_bond-bytes-_publickey-uint256-_registeredat-uint256-_deregisteredat-external",children:[],level:3},{value:"<strong><code>begin</code></strong> <em><code>() \u2192 address</code></em> (external)",id:"begin---address-external",children:[],level:3},{value:"<strong><code>next</code></strong> <em><code>(address darknodeID) \u2192 address</code></em> (external)",id:"next-address-darknodeid--address-external",children:[],level:3},{value:"<strong><code>removeDarknode</code></strong> <em><code>(address darknodeID)</code></em> (external)",id:"removedarknode-address-darknodeid-external",children:[],level:3},{value:"<strong><code>updateDarknodeBond</code></strong> <em><code>(address darknodeID, uint256 decreasedBond)</code></em> (external)",id:"updatedarknodebond-address-darknodeid-uint256-decreasedbond-external",children:[],level:3},{value:"<strong><code>updateDarknodeDeregisteredAt</code></strong> <em><code>(address darknodeID, uint256 deregisteredAt)</code></em> (external)",id:"updatedarknodederegisteredat-address-darknodeid-uint256-deregisteredat-external",children:[],level:3},{value:"<strong><code>darknodeOperator</code></strong> <em><code>(address darknodeID) \u2192 address payable</code></em> (external)",id:"darknodeoperator-address-darknodeid--address-payable-external",children:[],level:3},{value:"<strong><code>darknodeBond</code></strong> <em><code>(address darknodeID) \u2192 uint256</code></em> (external)",id:"darknodebond-address-darknodeid--uint256-external",children:[],level:3},{value:"<strong><code>darknodeRegisteredAt</code></strong> <em><code>(address darknodeID) \u2192 uint256</code></em> (external)",id:"darknoderegisteredat-address-darknodeid--uint256-external",children:[],level:3},{value:"<strong><code>darknodeDeregisteredAt</code></strong> <em><code>(address darknodeID) \u2192 uint256</code></em> (external)",id:"darknodederegisteredat-address-darknodeid--uint256-external",children:[],level:3},{value:"<strong><code>darknodePublicKey</code></strong> <em><code>(address darknodeID) \u2192 bytes</code></em> (external)",id:"darknodepublickey-address-darknodeid--bytes-external",children:[],level:3}],level:2}],p={toc:c};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,d.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,d.kt)(o.G,{type:o.e.Reference,mdxType:"DocTag"}),(0,d.kt)("h2",{id:"contract-darknoderegistrystore"},"Contract: ",(0,d.kt)("inlineCode",{parentName:"h2"},"DarknodeRegistryStore")),(0,d.kt)("p",null,"This contract stores data and funds for the DarknodeRegistry\ncontract. The data / fund logic and storage have been separated to improve\nupgradability."),(0,d.kt)("p",null,"Inherits from:"),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"CanReclaimTokens")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"Claimable")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"Ownable")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"Context")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("inlineCode",{parentName:"li"},"Initializable"))),(0,d.kt)("hr",null),(0,d.kt)("br",null),(0,d.kt)("h2",{id:"variables"},"Variables"),(0,d.kt)("h3",{id:"version-string"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"VERSION")),": ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"string"))),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"ren-contract-rentoken"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"ren")),": ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"contract RenToken"))),(0,d.kt)("hr",null),(0,d.kt)("br",null),(0,d.kt)("h2",{id:"functions"},"Functions"),(0,d.kt)("h3",{id:"constructor-string-_version-contract-rentoken-_ren-public"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"constructor"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(string _VERSION, contract RenToken _ren)"))," (public)"),(0,d.kt)("p",null,(0,d.kt)("strong",{parentName:"p"},"Params")),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_VERSION"),": A string defining the contract version.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_ren"),": The address of the RenToken contract."))),(0,d.kt)("p",null,"The contract constructor."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"appenddarknode-address-_darknodeid-address-payable-_darknodeoperator-uint256-_bond-bytes-_publickey-uint256-_registeredat-uint256-_deregisteredat-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"appendDarknode"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address _darknodeID, address payable _darknodeOperator, uint256 _bond, bytes _publicKey, uint256 _registeredAt, uint256 _deregisteredAt)"))," (external)"),(0,d.kt)("p",null,(0,d.kt)("strong",{parentName:"p"},"Params")),(0,d.kt)("ul",null,(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_darknodeID"),": The darknode's ID.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_darknodeOperator"),": The darknode's owner's address.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_bond"),": The darknode's bond value.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_publicKey"),": The darknode's public key.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_registeredAt"),": The time stamp when the darknode is registered.")),(0,d.kt)("li",{parentName:"ul"},(0,d.kt)("p",{parentName:"li"},(0,d.kt)("inlineCode",{parentName:"p"},"_deregisteredAt"),": The time stamp when the darknode is deregistered."))),(0,d.kt)("p",null,"Instantiates a darknode and appends it to the darknodes\nlinked-list."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"begin---address-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"begin"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"() \u2192 address"))," (external)"),(0,d.kt)("p",null,"Returns the address of the first darknode in the store."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"next-address-darknodeid--address-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"next"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 address"))," (external)"),(0,d.kt)("p",null,"Returns the address of the next darknode in the store after the\ngiven address."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"removedarknode-address-darknodeid-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"removeDarknode"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID)"))," (external)"),(0,d.kt)("p",null,"Removes a darknode from the store and transfers its bond to the\nowner of this contract."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"updatedarknodebond-address-darknodeid-uint256-decreasedbond-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"updateDarknodeBond"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID, uint256 decreasedBond)"))," (external)"),(0,d.kt)("p",null,"Updates the bond of a darknode. The new bond must be smaller\nthan the previous bond of the darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"updatedarknodederegisteredat-address-darknodeid-uint256-deregisteredat-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"updateDarknodeDeregisteredAt"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID, uint256 deregisteredAt)"))," (external)"),(0,d.kt)("p",null,"Updates the deregistration timestamp of a darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"darknodeoperator-address-darknodeid--address-payable-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"darknodeOperator"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 address payable"))," (external)"),(0,d.kt)("p",null,"Returns the owner of a given darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"darknodebond-address-darknodeid--uint256-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"darknodeBond"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 uint256"))," (external)"),(0,d.kt)("p",null,"Returns the bond of a given darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"darknoderegisteredat-address-darknodeid--uint256-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"darknodeRegisteredAt"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 uint256"))," (external)"),(0,d.kt)("p",null,"Returns the registration time of a given darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"darknodederegisteredat-address-darknodeid--uint256-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"darknodeDeregisteredAt"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 uint256"))," (external)"),(0,d.kt)("p",null,"Returns the deregistration time of a given darknode."),(0,d.kt)("hr",null),(0,d.kt)("h3",{id:"darknodepublickey-address-darknodeid--bytes-external"},(0,d.kt)("strong",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"strong"},"darknodePublicKey"))," ",(0,d.kt)("em",{parentName:"h3"},(0,d.kt)("inlineCode",{parentName:"em"},"(address darknodeID) \u2192 bytes"))," (external)"),(0,d.kt)("p",null,"Returns the encryption public key of a given darknode."),(0,d.kt)("hr",null))}u.isMDXComponent=!0},93454:function(e,n,t){t.d(n,{G:function(){return i},e:function(){return a}});var r,a,d=t(67294);!function(e){e.Tutorial="Tutorial",e.HowTo="How To",e.Reference="Reference",e.Explanation="Explanation"}(a||(a={}));var o=((r={})[a.Tutorial]="#b48ead",r[a.HowTo]="#69a8b9",r[a.Reference]="#bf616a",r[a.Explanation]="#d2b06c",r),i=function(e){var n=e.type,t=e.marginBottom;return d.createElement(d.Fragment,null,d.createElement("span",{style:{border:"2px solid "+o[n]||0,borderRadius:"5px",color:o[n]||"orange",padding:"0.1rem 0.4rem",marginBottom:void 0!==t?t:30,display:"inline-block"}},String(n)))}}}]);