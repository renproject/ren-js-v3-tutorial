"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7877],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return k}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),d=p(n),k=r,f=d["".concat(o,".").concat(k)]||d[k]||c[k]||i;return n?a.createElement(f,s(s({ref:t},m),{},{components:n})):a.createElement(f,s({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=d;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:r,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},63982:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var a=n(87462),r=n(63366),i=(n(67294),n(3905)),s=["components"],l={id:"lib_interfaces_build_main_parameters.lockandmintparams",title:"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",sidebar_label:"LockAndMintParams",custom_edit_url:null},o="Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",p={unversionedId:"v2/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams",id:"v2/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams",title:"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",description:"lib/interfaces/build/main/parameters.LockAndMintParams",source:"@site/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams.md",sourceDirName:"v2/api/interfaces",slug:"/v2/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams",permalink:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.lockandmintparams",editUrl:null,tags:[],version:"current",frontMatter:{id:"lib_interfaces_build_main_parameters.lockandmintparams",title:"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress>",sidebar_label:"LockAndMintParams",custom_edit_url:null}},m=[{value:"Type parameters",id:"type-parameters",children:[],level:2},{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"asset",id:"asset",children:[],level:3},{value:"contractCalls",id:"contractcalls",children:[],level:3},{value:"from",id:"from",children:[],level:3},{value:"nonce",id:"nonce",children:[],level:3},{value:"tags",id:"tags",children:[],level:3},{value:"to",id:"to",children:[],level:3},{value:"txHash",id:"txhash",children:[],level:3}],level:2}],c={toc:m};function d(e){var t=e.components,n=(0,r.Z)(e,s);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"interface-lockandmintparamslocktransaction-lockdeposit-lockaddress-minttransaction-mintaddress"},"Interface: LockAndMintParams<LockTransaction, LockDeposit, LockAddress, MintTransaction, MintAddress",">"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/modules/lib_interfaces_build_main_parameters"},"lib/interfaces/build/main/parameters"),".LockAndMintParams"),(0,i.kt)("p",null,"The parameters for a cross-chain transfer onto Ethereum."),(0,i.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LockTransaction")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LockDeposit")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/ren-client-docs/ren-js/v2/api/modules/lib_interfaces_build_main_chain#depositcommon"},(0,i.kt)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"/ren-client-docs/ren-js/v2/api/modules/lib_interfaces_build_main_chain#depositcommon"},(0,i.kt)("em",{parentName:"a"},"DepositCommon")),"<LockTransaction",">")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"LockAddress")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")," ","|"," { ",(0,i.kt)("inlineCode",{parentName:"td"},"address"),": ",(0,i.kt)("em",{parentName:"td"},"string"),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MintTransaction")),(0,i.kt)("td",{parentName:"tr",align:"left"},"-"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"any"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"MintAddress")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"string")," ","|"," { ",(0,i.kt)("inlineCode",{parentName:"td"},"address"),": ",(0,i.kt)("em",{parentName:"td"},"string"),"  }"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("em",{parentName:"td"},"any"))))),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},(0,i.kt)("em",{parentName:"a"},"TransferParamsCommon"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("strong",{parentName:"p"},"LockAndMintParams")))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"asset"},"asset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"asset"),": ",(0,i.kt)("em",{parentName:"p"},"string")),(0,i.kt)("p",null,"The asset being minted or burned - e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},'"BTC"'),"."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon#asset"},"asset")),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:39"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"contractcalls"},"contractCalls"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"contractCalls"),": ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.contractcall"},(0,i.kt)("em",{parentName:"a"},"ContractCall")),"[]"),(0,i.kt)("p",null,"Details for submitting one or more transactions. The last one will be\nused by the lockAndMint or burnAndRelease.\nFor minting, the last call's parameters will be augmented with the three\nrequired parameters for minting - the amount, nHash and RenVM signature.\nFor burning, the last call must involve ren-assets being burnt."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon#contractcalls"},"contractCalls")),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:91"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"from"},"from"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"from"),": ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_chain.lockchain"},(0,i.kt)("em",{parentName:"a"},"LockChain")),"<LockTransaction, LockDeposit, LockAddress, any, any",">"),(0,i.kt)("p",null,"The chain that the asset is native to - e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"Bitcoin()")," for bridging the\nasset ",(0,i.kt)("inlineCode",{parentName:"p"},'"BTC"'),"."),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:105"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"nonce"},"nonce"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"nonce"),": ",(0,i.kt)("em",{parentName:"p"},"string")," ","|"," ",(0,i.kt)("em",{parentName:"p"},"Buffer")),(0,i.kt)("p",null,"A LockAndMint's gateway address can be forced to be unique by providing a\n32-byte nonce."),(0,i.kt)("p",null,'The nonce should be passed is as a 32-byte Buffer or a 32-byte hex\nstring, with or without a "0x" prefix.'),(0,i.kt)("p",null,"It defaults to 0 (32 empty bytes)."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"warning"))," If the nonce is lost between detecting a deposit and\nsubmitting it to RenVM, the deposit's funds can't be recovered.\nA nonce should only be provided if it's guaranteed to be stored in\npersistent storage before a deposit address is shown to the user."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"nonce: Buffer.from(new Array(32)),\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'// Use a nonce based on the number of days since epoch, in order to\n// generate a new deposit address each day.\nnonce: new BN(Math.floor(Date.now() / 8.64e7))\n         .toArrayLike(Buffer, "be", 32),\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"// Provide a random 32-byte Buffer. It's important that this isn't lost.\nnonce: RenJS.utils.randomNonce(),\n")),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon#nonce"},"nonce")),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:78"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tags"},"tags"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"tags"),": ","[",(0,i.kt)("em",{parentName:"p"},"string"),"]"),(0,i.kt)("p",null,"Provide optional tags which can be used to look up transfers in the\nlightnodes."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon#tags"},"tags")),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:83"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"to"},"to"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"to"),": ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_chain.mintchain"},(0,i.kt)("em",{parentName:"a"},"MintChain")),"<MintTransaction, MintAddress, any",">"),(0,i.kt)("p",null,"The chain that the asset is being bridged to - e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"Ethereum(provider)"),"."),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:109"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"txhash"},"txHash"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"txHash"),": ",(0,i.kt)("em",{parentName:"p"},"string")),(0,i.kt)("p",null,"A RenVM transaction hash, which can be used to resume an existing mint\nor burn."),(0,i.kt)("p",null,"Inherited from: ",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon"},"TransferParamsCommon"),".",(0,i.kt)("a",{parentName:"p",href:"/ren-client-docs/ren-js/v2/api/interfaces/lib_interfaces_build_main_parameters.transferparamscommon#txhash"},"txHash")),(0,i.kt)("p",null,"Defined in: ren-js/packages/lib/interfaces/build/main/parameters.d.ts:44"))}d.isMDXComponent=!0}}]);